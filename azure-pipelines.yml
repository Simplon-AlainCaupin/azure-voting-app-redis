trigger:
- master

pool:
  vmImage: ubuntu-latest

stages:
- stage: kubesetup
  jobs:
  - job: connectkube
    steps:

    - task: Kubernetes@1
      inputs:
        connectionType: 'Kubernetes Service Connection'
        kubernetesServiceEndpoint: 'aks-connection'
        namespace: 'qal'
        command: 'get'
        arguments: 'deployments'
        secretType: 'dockerRegistry'
      name: "kubs"

- stage: Build_docker_image
  displayName: Build docker image 
  jobs:

  - job: Get_Version
    displayName: Get Version Build 
    pool:
      vmImage: ubuntu-latest 
    steps:

    - task: CmdLine@2
      displayName: Comparaison version application
      inputs:
        script: |
          versionnew=$(cat azure-vote/main.py | grep -E "^ver = \"[0-9.]+\"\$"|awk -F\" {'print $2'})
          versionold=$(curl -s http://lain-brief8.westeurope.cloudapp.azure.com | grep -o 'Azure Voting App v[0-9]\+\.[0-9]\+\.[0-9]\+' | sed 's/^.*v//;s/ on.*$//' | head -n1)
          echo "##vso[task.setvariable variable=verold]$versionold"
          echo "##vso[task.setvariable variable=vernew]$versionnew"
  
    - task: Docker@2
      name: CreateDockerImage
      displayName: create dockerhub image
      condition: ne(variables.verold,variables.vernew)
      inputs:
        containerRegistry: 'container-connection'
        repository: 'alaincpn/voteapp'
        command: 'buildAndPush'
        Dockerfile: 'Dockerfile'
        tags: 'latest'

- stage: QAL_Deployment
  displayName: Qal
  jobs:
  - job: QAL_Deploy
    displayName: Deploy on QAL 
    pool:
      vmImage: 'ubuntu-latest' 
    steps:
    - task: KubernetesManifest@0
      name: kubeonqal
      displayName: deploy on qal ns
      inputs:
        action: 'deploy'
        kubernetesServiceConnection: 'container-connection'
        namespace: 'qal'
        manifests: '**/app/qal/*'
    - task: Bash@3
      name: waitingfordeploy
      condition: succeeded()
      displayName: waiting for deployment
      inputs:
        targetType: 'inline'
        script: 'sleep 45'